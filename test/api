process.env.NODE_ENV = 'test';

const expect = require('chai').expect;
const request = require('supertest');

const app = require('../server.js');

describe('GET /api/ping', () => {
  it('OK, /api/ping successful', (done) => {
    request(app).get('/api/ping')
      .then((res) => {
        const body = res.body;
        expect(body).to.deep.equal({"success": true});
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech', () => {
  it('OK, Getting posts for tag with defaults', (done) => {
    request(app).get('/api/posts?tags=tech')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(28);
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech,health', () => {
  it('OK, Getting posts for tag with defaults', (done) => {
    request(app).get('/api/posts?tags=tech,health')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(53);
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech&sortBy=reads', () => {
  it('OK, Getting posts for tag and sortBy Value', (done) => {
    request(app).get('/api/posts?tags=tech&sortBy=reads')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(28);
        expect(body.posts[0].id).to.equal(54);
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech&sortBy=reads&direction=desc', () => {
  it('OK, Getting posts for tag and sortBy Value and direction as desc', (done) => {
    request(app).get('/api/posts?tags=tech&sortBy=reads&direction=desc')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(28);
        expect(body.posts[0].id).to.equal(51);
        done();
      })
      .catch((err) => done(err));
  });
})
process.env.NODE_ENV = 'test';

const expect = require('chai').expect;
const request = require('supertest');

const app = require('../server.js');

describe('GET /api/ping', () => {
  it('OK, /api/ping successful', (done) => {
    request(app).get('/api/ping')
      .then((res) => {
        const body = res.body;
        expect(body).to.deep.equal({"success": true});
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech', () => {
  it('OK, Getting posts for tag with defaults', (done) => {
    request(app).get('/api/posts?tags=tech')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(28);
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech,health', () => {
  it('OK, Getting posts for tag with defaults', (done) => {
    request(app).get('/api/posts?tags=tech,health')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(53);
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech&sortBy=reads', () => {
  it('OK, Getting posts for tag and sortBy Value', (done) => {
    request(app).get('/api/posts?tags=tech&sortBy=reads')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(28);
        expect(body.posts[0].id).to.equal(54);
        done();
      })
      .catch((err) => done(err));
  });
})

describe('GET /api/posts?tags=tech&sortBy=reads&direction=desc', () => {
  it('OK, Getting posts for tag and sortBy Value and direction as desc', (done) => {
    request(app).get('/api/posts?tags=tech&sortBy=reads&direction=desc')
      .then((res) => {
        const body = res.body;
        console.log(body);
        expect(body.posts.length).to.equal(28);
        expect(body.posts[0].id).to.equal(51);
        done();
      })
      .catch((err) => done(err));
  });
})
